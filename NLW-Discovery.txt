***
Aula 01 - Acelerando sua evolução

Definição de Front-end e Back-end (00:28:00)

Tecnologias usadas no projeto (00:30:00)



Ferramentas usadas no projeto:
	Visual Studio Code
		Instalou a extensão Launchbase
		
Criou o arquivo index.html	(00:40:00)
	Explicou conceitos básicos sobre o html
	Ensinou como criar um template básico para um arquivo html: No VSCode digitar ! e pressionar ENTER (00:53:10)
	
	Na linha 
	<html lang="pt-br">
	html é a tag e lang é o atributo. Existem vários atributos que são usados em arquivos html
	
	Instalou a extensão Live Server (00:57:50)
		IMPORTANTE: não dar duplo mouse click no arquivo index.html, somente usar open with live server
		
	No VSCode: Alt + Z organiza o texto do arquivo e insere quebras falsas de linha para melhor efeito visual
				CTRL + SHIFT + P abre uma caixa de procura (help)

Introdução ao CSS (01:10:00)	
	Demonstrou o princípio do cascateamento do css (01:23:05)
		Um selector composto por mais de um nível de hierarquia html tem maior precedência do que seletores individuais (ou simples)		
		O seletor de id (#id_name) é o seletor individual de maior precedência.
	Comentários dentro do css: /* comentário */
	Usar -- para criar variáveis no css e evitar conflitos com nome de parâmetros ou atributos do html (ex: --color)
	Sempre finalizar a linha com ;
	Os navegadores usam, por padrão, fonte de 16px.
		No css, isso corresponde a 1rem ou 100%.
	Tamanho do texto: px, rem e %. Quando se usa rem, se faz referência ao tamanho configurado no selector root.
	
Usando pastas e caminhos dentro dos arquivos html (01:30:40)
	/style.css -> o arquivo está localizado na url do servidor (raiz)
	
	
Apresentou o Figma (01:35:40)	
	Ao clicar no elemento é mostrada a cor e outros parâmetros do mesmo
	
Introdução ao conceito Mobile First (01:51:15)	
	
CSS Box Model (01:54:40)
	Atributos padding e margin: quando definido só um valor, vale para os 4 lados. Quando definido 2 valores, o primeiro valor vale para top e bottom e o segundo para left e right. Quando definidos 3 valores, o primeiro vale para top, o segundo para laterais e o terceiro para bottom.
	É possível definir os valores individualmente (ex: padding-top: 40px)
	

***	
Aula 02 - Olhando as oportunidades
	
		Dica do uso do Emmet para autocompletion no VSCode:
			ao digitar .classname e pressionar tab ou ENTER, o Emmet irá criar uma div com a classe "classname"
			
		no css, o atributo text-align não alinha somente o texto, mas também outros elementos como img	
		
		Para usar a propriedade justify-content: center é preciso usar display: flex;
		A proprieade css: text-decoration: none; remove o sublinhado padrão de hyperlinks da tag <a href=""
		
		Alterando o comportamento dos "botões" para mudarem de cor ao passar o mouse sobre eles (hover) (00:36:30)
			.buttons-container a.study:hover {
			Tentei fazer o mesmo sobre o seletor da tag a ao invés do seletor de classe .study, mas não funcionou
			Para alterar o tempo de resposta dessa mudança de cor é preciso usar a propriedade transition no parent, ou seja, na tag a
		
	Quando ele considera que a configuração mobile first está terminada, ele simula diferentes telas usando a funcionalidade do Developers Tools do browser. 
	Eu fiz isso também e experimentei girar a tela do dispositivo para landscape, coisa que ele não fez. 
		No formato landscape, a landing page é cortada na parte superior, ou seja, eu poderia otimizar isso.
		
Otimização da landing page para o desktop (00:48:50)
	Usando o disply grid para dividir a landing page em colunas:
	display: grid;
        grid-template-columns: 1fr 1fr 1fr; -> isso divide a tela em 3 partes de 1 fração flexível cada
	
	A classe .buttons-container recebeu o display flex para a versão mobile first. Agora na versão desktop, o display flex permanece válido, portanto, para organizar os botões à esquerda é necessário usar justify-content: flex-start;
	
	Na configuração mobile first, a configuração de tamanho de fonte no :root era de 60%.
	Agora na otimização para desktop, definida dentro do seletor @media (min-width: 700px), a configuração é de 62.5% 
	
	As propriedades de margem estavam fazendo os botões aumentarem de tamanho de forma indesejada (01:12:30)
	
	Copiar o arquivo index.html e renomear para study.html (01:18:28)
		Alterar as ocorrências de page-landing para page-study: após selecionar uma ocorrência, pressionar CTRL + D para selecionar todas as outras ocorrências e assim renomear simultaneamente.
		Fazer demais alterações na página study.html
		
	No formulário a opção padrão "Selecione uma opção" está oculta (hidden) e desabilitada (disabled)(01:28:00)
		Isso faz com que ela não seja exibida no drop-down menu.
		
	Criação da indicação de foco (qual campo está selecionado) (01:55:10)
		Ele usa uma pseudo classe no css (focus-within), para a criação do elemento foco no html. Para isso é imprescindível usar o selector content, mesmo que seu conteúdo seja vazio ("").
		Esse elemento de foco, por ser configurado para position: absolute, requer configurações de posicionamento (left e bottom) em relação ao seu parent (input-block), mas para isso é necessário configurar o parent (input-block) como position: relative;.
	
IMPORTANTE: o comportamento do estilo visual do Firefox é diferente do Chrome, por exemplo, a seta do drop-box é bem mais polida no Chrome em comparação com o Firefox.

	Quando se pretende ajustar margin-top é necessário usar display: block. Para outros tipos de display (ex: flex) o css não reconhece margin-top e não ajusta esta propriedade.
	
Otimização da página de seleção de professores para o desktop (02:23:05)	
	Para alinhar os campos de seleção na mesma linha, insere-se no bloco @media #search-teachers, a propriedade position: absolute con suas configurações de posicionamento;
	Para que o css reconheça essa configuração, no parent (.page-header .header-content) é necessário incluir position: relative;
	
	A margem colocada para o elemento p acabou sendo aplicada a todos os elementos p dentro da div. Para que esse estilo seja aplicado somente ao primeiro elemento p da div, usa-se: .teacher-item > p { ao invés de .teacher-item p {.
	
	Notei agora, que quando reduzo o tamanho do browser para simular visualização mobile, o texto da bio do professor fica colado no limite da div à esquerda. Verificar como inserir um padding para ficar alinhado com o texto do preço por hora.
	
	